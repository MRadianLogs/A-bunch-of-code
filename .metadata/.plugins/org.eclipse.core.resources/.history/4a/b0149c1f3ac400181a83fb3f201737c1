/*
 * File name: Ball.java
 *
 * Programmer: Michael Jesus Reyes
 *
 * Date: Sep 29, 2018
 */
package reyesProjects;

import java.awt.Color;
import java.awt.Graphics;

/**
 * <Insert C;ass Description Here>
 *
 * @author Michael Jesus Reyes
 *
 */
public class Ball
{
	private EngineMain main;
	private final static int RADIUS = 20;
	private int xPos, yPos, xVel, yVel, xAccel, yAccel; 
	private int centerXPos, centerYPos;
	private Color currentColor;
	
	public Ball(EngineMain main, int startingXPos, int startingYPos)
	{
		this.main = main;
		this.xPos = startingXPos;
		this.yPos = startingYPos;
	}
	
	public int getxPos()
	{
		return xPos;
	}

	public void setxPos(int xPos)
	{
		this.xPos = xPos;
	}

	public int getyPos()
	{
		return yPos;
	}

	public void setyPos(int yPos)
	{
		this.yPos = yPos;
	}

	public int getxVel()
	{
		return xVel;
	}

	public void setxVel(int xVel)
	{
		this.xVel = xVel;
	}

	public int getyVel()
	{
		return yVel;
	}

	public void setyVel(int yVel)
	{
		this.yVel = yVel;
	}

	public int getxAccel()
	{
		return xAccel;
	}

	public void setxAccel(int xAccel)
	{
		this.xAccel = xAccel;
	}

	public int getyAccel()
	{
		return yAccel;
	}

	public void setyAccel(int yAccel)
	{
		this.yAccel = yAccel;
	}

	public int getCenterXPos()
	{
		return centerXPos;
	}

	public void setCenterXPos(int centerXPos)
	{
		this.centerXPos = centerXPos;
	}

	public int getCenterYPos()
	{
		return centerYPos;
	}

	public void setCenterYPos(int centerYPos)
	{
		this.centerYPos = centerYPos;
	}

	public Color getCurrentColor()
	{
		return currentColor;
	}

	public void setCurrentColor(Color currentColor)
	{
		this.currentColor = currentColor;
	}

	public static int getRadius()
	{
		return RADIUS;
	}

	public void update()
	{
		//Calc current centerXPos and centerYPos
		centerXPos = xPos + RADIUS;
		centerYPos = yPos + RADIUS;
		//move like this
		
		//Check for collisions
		
	}
	
	public void checkForWallCollision()
	{
		if(getCenterXPos()+RADIUS >= main.getWidth())
		{
			
		}
	}
	
	public void paint(Graphics g)
	{
		g.setColor(currentColor);
		g.fillOval(xPos, yPos, RADIUS*2, RADIUS*2);
	}
}
